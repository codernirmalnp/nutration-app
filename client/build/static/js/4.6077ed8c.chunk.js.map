{"version":3,"sources":["components/ListItem.js","components/Item.js"],"names":["ListItem","item","getId","dispatch","useDispatch","className","src","image","alt","itemName","value","_id","onClick","e","removeItem","target","protein","fat","carbohydrate","Item","useState","page","setPage","itemIndex","setItemIndex","food","useSelector","state","Diet","useEffect","a","listItems","fetchData","data","to","class","filter","map","index","key","Pagination","previousPage","previous","nextPage","next","totalPage","currentPage","getPage"],"mappings":"2LAIaA,EAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MAEtBC,EAASC,cAaZ,OACI,oCAEA,+BACJ,wBAAIC,UAAU,qCACZ,wBAAIA,UAAU,yCACZ,yBACEA,UAAU,uCACVC,IAAG,uDAAkDL,EAAKM,OAC1DC,IAAI,MAGR,4BACE,0BAAMH,UAAU,kCAAkCJ,EAAKQ,WAEzD,wBAAIJ,UAAU,cACZ,4BAAQA,UAAU,6GAA6GK,MAAOT,EAAKU,IAAKC,QA1BpI,SAACC,GAEjBV,EAASW,YAAWD,EAAEE,OAAOL,QAC7BR,EAAMW,EAAEE,OAAOL,SAuBX,gBAIF,wBAAIL,UAAU,cACZ,8BAAOJ,EAAKe,UAEd,wBAAIX,UAAU,cACZ,8BAAOJ,EAAKgB,MAGd,wBAAIZ,UAAU,cACZ,0BAAMA,UAAU,kBACbJ,EAAKiB,mB,gBCkDDC,UAxFf,WAAgB,IAAD,EACQC,qBADR,mBACNC,EADM,KACDC,EADC,OAEkBF,qBAFlB,mBAENG,EAFM,KAEIC,EAFJ,KAINC,EADQC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,QACjCH,KACDtB,EAASC,cACfyB,qBAAU,WAAI,4CAEb,sBAAAC,EAAA,sDACC3B,EAAS4B,YAAUV,IADpB,4CAFa,uBAAC,WAAD,wBAKbW,KAIC,CAAC7B,EAASkB,IACZ,IAKQnB,EAAM,SAAC+B,GACXT,EAAaS,IAOf,OACE,6BACA,kBAAC,IAAD,CAAMC,GAAG,aAAaC,MAAM,8CAA5B,aACA,2BAAO9B,UAAU,yBACf,2BAAOA,UAAU,mBACf,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,mBAElB,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,iBAAhB,SAEF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,iBAAhB,WAEF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,iBAAhB,YAGF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,iBAAhB,QAGF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,iBAAhB,mBAKLkB,EAAYE,EAAKQ,KAAKG,QAAO,SAACnC,GACxB,OAAOA,EAAKU,MAAQY,KACxBc,KAAI,SAACpC,EAAKqC,GACX,OAAO,kBAAC,EAAD,CAAUrC,KAAMA,EAAQsC,IAAKD,EAAOpC,MAAOA,OAEjDuB,EAAOA,EAAKQ,KAAKI,KAAI,SAACpC,EAAKqC,GAG5B,OAAO,kBAAC,EAAD,CAAUrC,KAAMA,EAAQsC,IAAKD,EAAOpC,MAAOA,OAEjD,+BAAO,4BAAI,6CAarBuB,GAAQ,kBAACe,EAAA,EAAD,CAAYC,aAAchB,EAAKiB,SAAUC,SAAUlB,EAAKmB,KAAMC,UAAWpB,EAAKoB,UAAWC,YAAarB,EAAKqB,YAAaC,QAjEhH,SAACd,GACdX,EAAQW","file":"static/js/4.6077ed8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {removeItem} from '../actions/diet.js'\r\n\r\nexport const ListItem=({item,getId})=>{\r\n \r\n const dispatch=useDispatch();\r\n \r\n\r\n  const  deleteItem=(e)=>{\r\n\r\n    dispatch(removeItem(e.target.value))\r\n    getId(e.target.value)\r\n  \r\n  }\r\n\r\n\r\n\r\n \r\n    return(\r\n        <>\r\n        \r\n        <tbody>\r\n    <tr className=\"bg-white border-4 border-gray-200\">\r\n      <td className=\"px-16 py-2 flex flex-row items-center\">\r\n        <img\r\n          className=\"h-20 w-20 rounded-full object-cover \"\r\n          src={`https://codernirmalapi.herokuapp.com/uploads/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <span className=\"text-center ml-2 font-semibold\">{item.itemName}</span>\r\n      </td>\r\n      <td className=\"px-16 py-2\">\r\n        <button className=\"bg-red-500 text-white px-4 py-2 border rounded-md hover:bg-white hover:border-indigo-500 hover:text-black \" value={item._id} onClick={deleteItem}>\r\n          Delete Item\r\n        </button>\r\n      </td>\r\n      <td className=\"px-16 py-2\">\r\n        <span>{item.protein}</span>\r\n      </td>\r\n      <td className=\"px-16 py-2\">\r\n        <span>{item.fat}</span>\r\n      </td>\r\n\r\n      <td className=\"px-16 py-2\">\r\n        <span className=\"text-green-500\">\r\n          {item.carbohydrate}\r\n        </span>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n   \r\n    </>\r\n   \r\n     \r\n   \r\n\r\n      \r\n   \r\n\r\n    )\r\n}\r\n\r\n ","import React,{useEffect,useState} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {listItems} from '../actions/diet.js'\r\nimport {ListItem} from './ListItem'\r\nimport Pagination from './Pagination'\r\n\r\nimport {Link } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Item(){\r\n  const [page,setPage]=useState()\r\n  const [itemIndex,setItemIndex]=useState()\r\n  const itemList=useSelector(state=>state.Diet)\r\n  const {food}=itemList\r\n  const dispatch=useDispatch();\r\n  useEffect(()=>{\r\n\r\n   async function fetchData(){\r\n    dispatch(listItems(page))\r\n   }\r\n   fetchData();\r\n  \r\n     \r\n   \r\n  },[dispatch,page])\r\n  const  getPage=(data)=>{\r\n    setPage(data)\r\n  \r\n  \r\n    }\r\n    const getId=(data)=>{\r\n      setItemIndex(data)\r\n    }\r\n \r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n      <Link to='/dashboard' class=\"w-full flex justify-center text-orange-700\">Dashboard</Link>\r\n      <table className=\"min-w-full table-auto\">\r\n        <thead className=\"justify-between\">\r\n          <tr className=\"bg-gray-800\">\r\n            <th className=\"px-16 py-2\">\r\n              <span className=\"text-gray-300\"></span>\r\n            </th>\r\n            <th className=\"px-16 py-2\">\r\n              <span className=\"text-gray-300\">Name</span>\r\n            </th>\r\n            <th className=\"px-16 py-2\">\r\n              <span className=\"text-gray-300\">Action</span>\r\n            </th>\r\n            <th className=\"px-16 py-2\">\r\n              <span className=\"text-gray-300\">Protein</span>\r\n            </th>\r\n      \r\n            <th className=\"px-16 py-2\">\r\n              <span className=\"text-gray-300\">Fat</span>\r\n            </th>\r\n      \r\n            <th className=\"px-16 py-2\">\r\n              <span className=\"text-gray-300\">Carbohydrate</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n       \r\n        {itemIndex ? food.data.filter((item)=>{\r\n               return item._id !== itemIndex\r\n        }).map((item,index)=>{\r\n          return <ListItem item={item}   key={index} getId={getId} />\r\n\r\n        }):food ? food.data.map((item,index)=>{\r\n             \r\n           \r\n          return <ListItem item={item}   key={index} getId={getId} />\r\n \r\n        }):<tbody><tr><td>Loading...</td></tr></tbody>}\r\n       \r\n          \r\n          \r\n      \r\n     \r\n\r\n  \r\n\r\n   \r\n      \r\n    \r\n</table>\r\n{food && <Pagination previousPage={food.previous} nextPage={food.next} totalPage={food.totalPage} currentPage={food.currentPage} getPage={getPage}/> }\r\n\r\n</div>\r\n   \r\n    )\r\n\r\n}\r\nexport default Item;"],"sourceRoot":""}